layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "classes"
  hdf5_data_param {
    source: "train_data_list.txt"
    batch_size: 128
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  inner_product_param {
    num_output: 40
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "relu1"
}

layer {
    name: "reshapeA"
    type: "Reshape"
    bottom: "relu1"
    top: "reshapeA"
    reshape_param {
      shape {
        dim: -1  # copy the dimension from below
        dim: 1  # copy the dimension from below
        dim: 20  # copy the dimension from below
        dim: 2 # infer it from the other dimensions
      }
    }
  }

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "reshapeA"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2 # pool over a 3x3 region
  }
}

layer {
    name: "reshapeB"
    type: "Reshape"
    bottom: "pool1"
    top: "reshapeB"
    reshape_param {
      shape {
        dim: -1
        dim: 19 # infer it from the other dimensions
      }
    }
  }

layer {
  name: "ipA"
  type: "InnerProduct"
  bottom: "reshapeB"
  top: "ipA"
  inner_product_param {
    num_output: 19
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ipA"
  top: "relu2"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "relu2"
  top: "ip2"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "classes"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "classes"
  top: "loss"
}
